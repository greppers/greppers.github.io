#+TITLE: Transforming Education with Sustainable Development
#+INDEX: Project Specification

#+LATEX_HEADER: \usepackage{parskip}

* Abstract

This project and the applications that compose it aim to address the
/Quality Education/ goal from the United Nations' 2030 Agenda.

Sustainable Development is a call to action, and an active program to
end poverty, protect the planet and ensure prosperity and peace for
all people, through the combination of manpower of all nations, in all
domains, to hopefully alleviate the issues we currently face.

This project seeks to integrate cloud technologies with the
educational system by providing a platform dedicated to the journaling
of open scientific documents, ranging from research papers to books
and literature.

* Technical requirements

** Infrastructure

#+ATTR_LATEX: :environment longtable :align |p{4cm}|
| Requirement                                                      | OpenStack | CloudStack | OpenNebula |
|------------------------------------------------------------------+-----------+------------+------------|
| Open source software                                             | ✓         | ✓          | ✓          |
| Modular multi-tenant architecture                                | ✓         | /          | ✓          |
| Provides orchestration capabilities                              | ✓         | ✓          | ✓          |
| Supports various hypervisors                                     | ✓         | ✓          | /          |
| Supports hybrid and private deployments                          | ✓         | ✓          | ✓          |
| Leverages commodity hardware                                     | ✓         | ✓          | ✓          |
| Easily add storage capacity                                      | ✓         | ✓          | ✓          |
| Horizontal and vertical scaling of storage                       | ✓         | ✓          | ✓          |
| Self-healing and data redundancy                                 | ✓         | ✓          | ✓          |
| Manageable through a centralized dashboard                       | ✓         | ✓          | ✓          |
| Provide standards for building open and scalable clouds          | ✓         | ✓          | ✓          |
| Backup and archive large volumes of data with linear performance | ✓         | ✓          | ✓          |

The three candidates fair quite well against each other, let's analyze
some of the differences to be able to pick the right solution.

CloudStack is a monolithic beast, every one of its core components
(e.g. Storage, Compute, Monitoring, etc.) strongly depends on the
other. While this architecture certainly has its advantages, most
notably in the installation and maintenance phases, it does not meet
the requirements of the project.

OpenNebula's hypervisor support is limited to KVM and VMWare ESXi,
which doesn't quite compare to the [[https://docs.openstack.org/nova/queens/admin/configuration/hypervisors.html][extensive list of hypervisors that
OpenStack supports]].

That leaves us with OpenStack, the only cloud infrastructure software
that meets all of our requirements.

** Virtualization

#+ATTR_LATEX: :environment longtable :align |p{4cm}|
| Requirement                                                                  | KVM | Hyper-V | Xen |
|------------------------------------------------------------------------------+-----+---------+-----|
| Full-supported by and compatible with the infrastructure management solution | ✓   | ✓       | ✓   |
| Can use a wide variety of certified Linux-supported hardware platforms       | ✓   |         | ✓   |
| Supports live migration                                                      | ✓   | ✓       | ✓   |
| Proportional scaling in terms of user traffic and workload                   | ✓   | ✓       | ✓   |

Cloud providers have been slowly but steadily moving away from
Citrix's Xen, probably because KVM offers [[https://www.linode.com/blog/linode/linode-turns-12-heres-some-kvm/][better performance]] for less
management overhead.

KVM is clearly the more versatile hypervisor.

** Orchestration

#+ATTR_LATEX: :environment longtable :align |p{4cm}|
| Requirement                                               | Kubernetes | Docker Swarm |
|-----------------------------------------------------------+------------+--------------|
| Compatible with any Linux distribution                    | ✓          | ✓            |
| Automatic installation via configuration management tools | ✓          | ✓            |
| A standard and is available on a multitude of platforms   | ✓          | ✓            |
| Facilitate declarative configuration and automation       | ✓          |              |
| Provide deployment patterns and templates                 | ✓          | ✓            |
| Ensure self-healing                                       | ✓          | ✓            |
| Provide service discovery and load balancing              |            | ✓            |

The advantage that Docker Swarm has over Kubernetes is that it offers
load balancing and service discovery features out of the box, while
Kubernetes takes the lead in that it is more configurable and through
automation tools like Ansible or Puppet.

The scability of our cloud infrastructure strongly depends on the
ability of the container orchestration tool of choice to be automated.

Docker Swarm's automation features [[https://docs.ansible.com/ansible/latest/collections/community/docker/docker_swarm_module.html#id1][leave much to be desired]], which
means that Kubernetes is unsurprisingly more fit for the job.

** Automation

#+ATTR_LATEX: :environment longtable :align |p{4cm}|
| Requirement                                        | Ansible | Puppet | Chef |
|----------------------------------------------------+---------+--------+------|
| Open source software                               | ✓       | ✓      | ✓    |
| Support Windows, Linux and other UNIX-like systems | ✓       | ✓      | ✓    |
| Agentless                                          | ✓       |        |      |
| Provisioning and configuration management          | ✓       | ✓      | ✓    |
| Application-deployment features                    | ✓       | ✓      | ✓    |
| Support standard communication protocols, e.g. SSH | ✓       |        |      |

Compared to its alternatives, Ansible meets every one of our
requirements - it's an agentless, cross-platform and event-driven
automation tool that integrates perfectly with the rest of our
infrastructure.
